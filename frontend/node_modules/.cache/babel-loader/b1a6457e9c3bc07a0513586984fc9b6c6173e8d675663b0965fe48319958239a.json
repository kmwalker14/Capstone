{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AdminSidebarMenu = _resolveComponent(\"AdminSidebarMenu\");\n  const _component_SidebarMenu = _resolveComponent(\"SidebarMenu\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Show admin sidebar menu if user is an admin \"), $setup.isAdmin ? (_openBlock(), _createBlock(_component_AdminSidebarMenu, {\n    key: 0\n  })) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Show student menu if user is not an admin \"), _createVNode(_component_SidebarMenu)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" Router will render component based on current route \"), _createVNode(_component_router_view)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","isAdmin","_createBlock","_component_AdminSidebarMenu","key","_Fragment","_createVNode","_component_SidebarMenu","_component_router_view"],"sources":["C:\\Users\\kiera\\Downloads\\Capstone-develop-database\\Capstone\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- Show admin sidebar menu if user is an admin -->\r\n    <AdminSidebarMenu v-if=\"isAdmin\" />\r\n\r\n    <!-- Show student menu if user is not an admin -->\r\n    <SidebarMenu v-else />\r\n\r\n    <!-- Router will render component based on current route -->\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {computed} from \"vue\";\r\nimport AdminSidebarMenu from './components/AdminSidebarMenu.vue';\r\nimport SidebarMenu from \"./components/SidebarMenu.vue\";\r\n\r\n// Mock Auth0 function (simulating user authentication)\r\nconst mockAuth0 = {\r\n  getUser: () => {\r\n    // Return mock user data\r\n    return {role: \"admin\"}; // This is a mock role; it can be switched between 'admin' or 'student' for testing\r\n  }\r\n};\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    AdminSidebarMenu,\r\n    SidebarMenu\r\n  },\r\n\r\n  setup() {\r\n    // Mock Auth0 - Get user role (replace with actual Auth0 logic later)\r\n    const user = mockAuth0.getUser(); // Simulate user retrieval (replace call with real Auth0 logic for retrieving the user's role)\r\n    const isAdmin = computed(() => user.role === \"admin\"); // Check if the user is an admin\r\n\r\n    // Store mock user in localStorage (store the mock user for the session)\r\n    if (!localStorage.getItem(\"user\")) {\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n    }\r\n\r\n    return {isAdmin};\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      currentPage: 'adminhome' // Default to this page\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Import CSS files if needed */\r\n  #app {\r\n    display: flex;\r\n    width: 100%;\r\n    max-width: 100vw;\r\n    min-height: 100vh;\r\n    overflow-x: hidden;\r\n  }\r\n</style>\r\n\r\n\r\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;;uBAAbC,mBAAA,CASM,OATNC,UASM,GARJC,mBAAA,iDAAoD,EAC5BC,MAAA,CAAAC,OAAO,I,cAA/BC,YAAA,CAAmCC,2BAAA;IAHvCC,GAAA;EAAA,O,cAMIP,mBAAA,CAAsBQ,SAAA;IAN1BD,GAAA;EAAA,IAKIL,mBAAA,+CAAkD,EAClDO,YAAA,CAAsBC,sBAAA,E,mDAEtBR,mBAAA,yDAA4D,EAC5DO,YAAA,CAA2BE,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}