{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-container\"\n};\nconst _hoisted_2 = {\n  class: \"layout-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"main-content\"\n};\nconst _hoisted_4 = {\n  class: \"content-section\"\n};\nconst _hoisted_5 = {\n  class: \"profile-content\"\n};\nconst _hoisted_6 = {\n  class: \"profile-details\"\n};\nconst _hoisted_7 = {\n  class: \"about-section\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"tiptap\"\n};\nconst _hoisted_9 = {\n  class: \"scrollable-container\"\n};\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  class: \"submitted-entry tiptap-content\"\n};\nconst _hoisted_12 = [\"innerHTML\"];\nconst _hoisted_13 = {\n  class: \"buttons-container\"\n};\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_editor_content = _resolveComponent(\"editor-content\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"main\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"header\", {\n    class: \"header\"\n  }, [_createElementVNode(\"h1\", {\n    class: \"page-title\"\n  }, \"Inside ASU\"), _createElementVNode(\"div\", {\n    class: \"user-profile\"\n  }, [_createElementVNode(\"div\", {\n    class: \"user-info\"\n  })])], -1 /* HOISTED */)), _createElementVNode(\"section\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"banner\"\n  }, [_createCommentVNode(\" REMOVE ??? \")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"profile-header-section\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"section\", _hoisted_7, [$data.editor ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"control-group\"\n  }, [_createElementVNode(\"div\", {\n    class: \"button-group\"\n  }, [_createCommentVNode(\" Your existing buttons... \")])], -1 /* HOISTED */)), _createVNode(_component_editor_content, {\n    editor: $data.editor\n  }, null, 8 /* PROPS */, [\"editor\"])])) : _createCommentVNode(\"v-if\", true)])])]), _createCommentVNode(\" Scrollable Canvas Section for PDF Pages \"), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.imageUrls, (imageUrl, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"img\", {\n      src: imageUrl,\n      alt: \"PDF Page\"\n    }, null, 8 /* PROPS */, _hoisted_10)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    class: \"submit-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.submitContent && $options.submitContent(...args))\n  }, \"Submit\")]), _createCommentVNode(\" Display Submitted Content ONLY Below the Rich Text Box \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.submittedContent, content => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: content.id,\n      class: \"content-box\"\n    }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", {\n      innerHTML: content.content,\n      class: \"tiptap-content\"\n    }, null, 8 /* PROPS */, _hoisted_12), _createCommentVNode(\" Buttons wrapped in a flex container \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editContent(content),\n      class: \"edit-button\"\n    }, \"Edit\", 8 /* PROPS */, _hoisted_14), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteContent(content.id),\n      class: \"delete-button\"\n    }, \"Delete\", 8 /* PROPS */, _hoisted_15)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","_hoisted_5","_hoisted_6","_hoisted_7","$data","editor","_hoisted_8","_createVNode","_component_editor_content","_hoisted_9","_Fragment","_renderList","_ctx","imageUrls","imageUrl","index","src","alt","_hoisted_10","onClick","_cache","args","$options","submitContent","$setup","submittedContent","content","id","_hoisted_11","innerHTML","_hoisted_12","_hoisted_13","$event","editContent","_hoisted_14","deleteContent","_hoisted_15"],"sources":["C:\\Users\\kiera\\Downloads\\Kiera-Branch-Capstone\\frontend\\src\\pages\\AdminInsideASU.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-container\">\r\n    <div class=\"layout-wrapper\">\r\n      <main class=\"main-content\">\r\n        <header class=\"header\">\r\n          <h1 class=\"page-title\">Inside ASU</h1>\r\n          <div class=\"user-profile\">\r\n            <div class=\"user-info\">\r\n            </div>\r\n          </div>\r\n        </header>\r\n        \r\n        <section class=\"content-section\">\r\n          <div class=\"banner\"> <!-- REMOVE ??? --> </div>\r\n          \r\n          <div class=\"profile-content\">\r\n            <div class=\"profile-details\">\r\n              <div class=\"profile-header-section\">\r\n              </div>\r\n              <section class=\"about-section\">\r\n                <div v-if=\"editor\" class=\"tiptap\">\r\n                  <div class=\"control-group\">\r\n                    <div class=\"button-group\">\r\n                      <!-- Your existing buttons... -->\r\n                    </div>\r\n                  </div>\r\n                  <editor-content :editor=\"editor\" />\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Scrollable Canvas Section for PDF Pages -->\r\n          <div class=\"scrollable-container\">\r\n            <div v-for=\"(imageUrl, index) in imageUrls\" :key=\"index\">\r\n              <img :src=\"imageUrl\" alt=\"PDF Page\" />\r\n            </div>\r\n          </div>\r\n          \r\n          <button class=\"submit-button\" @click=\"submitContent\">Submit</button>\r\n        </section>\r\n\r\n        <!-- Display Submitted Content ONLY Below the Rich Text Box -->\r\n        <div v-for=\"content in submittedContent\" :key=\"content.id\" class=\"content-box\">\r\n          <div class=\"submitted-entry tiptap-content\">\r\n            <div v-html=\"content.content\" class=\"tiptap-content\"></div>\r\n            <!-- Buttons wrapped in a flex container -->\r\n            <div class=\"buttons-container\">\r\n              <button @click=\"editContent(content)\" class=\"edit-button\">Edit</button>\r\n              <button @click=\"deleteContent(content.id)\" class=\"delete-button\">Delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport Document from '@tiptap/extension-document'\r\nimport FontFamily from '@tiptap/extension-font-family'\r\nimport Paragraph from '@tiptap/extension-paragraph'\r\nimport Text from '@tiptap/extension-text'\r\nimport Highlight from '@tiptap/extension-highlight'\r\nimport TextAlign from '@tiptap/extension-text-align'\r\nimport StarterKit from '@tiptap/starter-kit'\r\nimport Image from '@tiptap/extension-image'\r\nimport TextStyle from '@tiptap/extension-text-style'\r\nimport Link from '@tiptap/extension-link'\r\nimport { Editor, EditorContent } from '@tiptap/vue-3'\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\r\nimport { faParagraph } from '@fortawesome/free-solid-svg-icons'\r\nimport 'font-awesome/css/font-awesome.css'\r\nimport { faHighlighter } from '@fortawesome/free-solid-svg-icons'\r\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport { ref, onMounted } from \"vue\";\r\nimport * as pdfjsLib from \"pdfjs-dist/webpack\"; // Use this for Webpack builds\r\npdfjsLib.GlobalWorkerOptions.workerSrc = require(\"pdfjs-dist/build/pdf.worker.min.js\");\r\n\r\nexport default {\r\nname: 'AdminInsideASU',\r\n  setup() {\r\n    const submittedContent = ref([]);\r\n\r\n    // Fetch content from backend when component loads\r\n    const fetchContent = async () => {\r\n      try {\r\n        console.log(\"Fetching content from backend...\"); // Debugging\r\n        const response = await axios.get(\"https://asu-capstone-backend.onrender.com/api/insideasu\");\r\n        console.log(\"Fetched content:\", response.data); // Debugging\r\n        submittedContent.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching content:\", error);\r\n      }\r\n    };\r\n\r\n\r\n\r\n\r\n    // Fetch content on mount\r\n    onMounted(fetchContent);\r\n\r\n    return {\r\n      submittedContent,\r\n      fetchContent\r\n    }\r\n  },\r\n\r\n  components: {\r\n    EditorContent,\r\n    //FontAwesomeIcon\r\n  },\r\n  data() {\r\n    return {\r\n      editor: null,\r\n      paragraphIcon: faParagraph,\r\n      highlightIcon: faHighlighter,\r\n      faFileUpload,\r\n      selectedContentId: null,\r\n      contents: [],\r\n    }\r\n  },\r\nmethods: {\r\n  setPage(page) {\r\n    this.$emit('page-changed', page);\r\n  },\r\n\r\n  addLink() {\r\n    let url = window.prompt(\"Enter the URL:\");\r\n    if (url) {\r\n      // Ensure the URL starts with http:// or https://\r\n      if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\r\n        url = \"https://\" + url;\r\n      }\r\n      this.editor.chain().focus().extendMarkRange(\"link\").setLink({ href: url }).run();\r\n    }\r\n  }\r\n,\r\n\r\n  async submitContent() {\r\n    const content = this.editor.getHTML(); // Get rich text content\r\n    console.log(\"Submitting content:\", content);\r\n\r\n    const backendUrl = process.env.VUE_APP_BACKEND_URL || \"https://asu-capstone-backend.onrender.com\";\r\n\r\n    try {\r\n      let response;\r\n      if (this.selectedContentId) {\r\n        // If editing existing content\r\n        response = await axios.put(`${backendUrl}/api/insideasu/${this.selectedContentId}`, { content });\r\n        console.log(\"✅ Content Updated:\", response.data);\r\n        alert(\"Content updated successfully!\");\r\n      } else {\r\n        // If creating new content\r\n        response = await axios.post(`${backendUrl}/api/insideasu`, { content });\r\n        console.log(\"✅ Content Created:\", response.data);\r\n        alert(\"Content saved successfully!\");\r\n      }\r\n\r\n      this.selectedContentId = null; // Reset edit state\r\n      this.editor.commands.clearContent(); // Clear editor\r\n      this.fetchContent(); // Refresh the content list\r\n    } catch (error) {\r\n      console.error(\"❌ Error saving content:\", error.response?.data || error.message);\r\n      alert(\"Failed to save content\");\r\n    }\r\n  }\r\n\r\n  ,\r\n\r\n  async deleteContent(contentId) {\r\n    if (!confirm(\"Are you sure you want to delete this content?\")) return;\r\n\r\n    try {\r\n      const backendUrl = process.env.VUE_APP_BACKEND_URL || \"https://asu-capstone-backend.onrender.com\";\r\n\r\n      await axios.delete(`${backendUrl}/api/insideasu`, { data: { id: contentId } });\r\n\r\n      alert(\"Content deleted successfully!\");\r\n\r\n      // ✅ Reload the entire page to reflect changes\r\n      window.location.reload();\r\n\r\n    } catch (error) {\r\n      console.error(\"❌ Error deleting content:\", error);\r\n      alert(\"Failed to delete content.\");\r\n    }\r\n  }\r\n\r\n  ,\r\n\r\n  addImage() {\r\n    const url = window.prompt('Enter image URL:')\r\n    if (url) {\r\n      this.editor.chain().focus().setImage({ src: url }).run()\r\n    }\r\n  },\r\n  triggerFileUpload() {\r\n    this.$refs.fileInput.click()\r\n  },\r\n\r\n  handleFileUpload(event) {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const fileType = file.type;\r\n    const fileUrl = URL.createObjectURL(file);\r\n\r\n    if (fileType.startsWith(\"image/\")) {\r\n      // ✅ Display image directly\r\n      this.editor.chain().focus().setImage({ src: fileUrl }).run();\r\n    } \r\n    else if (fileType === \"application/pdf\") {\r\n      // ✅ Convert PDF to image and display\r\n      this.convertPdfToImages(fileUrl);\r\n    } \r\n    else {\r\n      // ✅ Provide a download link for unsupported file types\r\n      this.editor.chain().focus().insertContent(`\r\n        <p>Uploaded file: <a href=\"${fileUrl}\" download=\"${file.name}\">${file.name}</a></p>\r\n      `).run();\r\n    }\r\n  },\r\n\r\n  async convertPdfToImages(pdfUrl) {\r\n    const pdf = await pdfjsLib.getDocument(pdfUrl).promise;\r\n    const numPages = pdf.numPages; // Get total number of pages\r\n\r\n    const imageUrls = []; // Store images here\r\n    let firstPageDimensions = null;\r\n\r\n    for (let pageNum = 1; pageNum <= numPages; pageNum++) {\r\n      const page = await pdf.getPage(pageNum);\r\n\r\n      const scale = 2; // Increase scale for better resolution\r\n      const viewport = page.getViewport({ scale });\r\n\r\n      // If it's the first page, store the dimensions for scaling all other pages\r\n      if (pageNum === 1) {\r\n        firstPageDimensions = { width: viewport.width, height: viewport.height };\r\n      }\r\n\r\n      // Use the first page's size for all pages\r\n      const adjustedViewport = {\r\n        width: firstPageDimensions.width,\r\n        height: firstPageDimensions.height,\r\n        scale: firstPageDimensions.width / viewport.width // Adjust the scale to match first page's size\r\n      };\r\n\r\n      // Create canvas for rendering this page\r\n      const canvas = document.createElement(\"canvas\");\r\n      const context = canvas.getContext(\"2d\");\r\n      canvas.width = adjustedViewport.width;\r\n      canvas.height = adjustedViewport.height;\r\n\r\n      await page.render({ canvasContext: context, viewport: adjustedViewport }).promise;\r\n\r\n      // Convert canvas to image URL\r\n      const imageUrl = canvas.toDataURL(\"image/png\");\r\n      imageUrls.push(imageUrl); // Add image URL to the list\r\n    }\r\n\r\n    this.imageUrls = imageUrls; // Bind the image URLs to the template for rendering\r\n  },\r\n\r\n  \r\n  editContent(content) {\r\n    this.selectedContentId = content.id; // Track the content being edited\r\n    this.editor.commands.setContent(content.content);\r\n    this.isEditing = true; // Load content into editor\r\n  } },\r\n  mounted() {\r\n    this.editor = new Editor({\r\n      extensions: [\r\n        StarterKit,\r\n        TextAlign.configure({\r\n          types: ['heading', 'paragraph'],\r\n\r\n        }),\r\n\r\n        FontFamily.configure({\r\n          types: ['textStyle'],\r\n        }),\r\n        Highlight,\r\n        Image,\r\n        TextStyle,\r\n        Link,\r\n        Document,\r\n        Paragraph,\r\n        Text,\r\n        FontFamily,\r\n        TextStyle,\r\n      ],\r\n      content: `<p style=\"font-family: Poppins;\">I am a rich text editor</p>`, // Ensure Poppins is the default font\r\n      editorProps: {\r\n        attributes: {\r\n          style: \"font-family: Poppins;\" // Apply Poppins globally\r\n        }\r\n      }\r\n    });\r\n    this.fetchContent();\r\n  },\r\n  beforeUnmount() {\r\n    if (this.editor) {\r\n      this.editor.destroy()\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* Styles the main container that holds the entire admin layout */\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Comic+Sans+MS&display=swap');\r\n\r\n.tiptap-content span[style*=\"Comic Sans MS\"] {\r\n  font-family: \"Comic Sans MS\", sans-serif !important;\r\n}\r\n\r\n.admin-container {\r\n  background: var(--Color-Background, #f3f4ff);\r\n  padding: 0 37px 0 0;\r\n  overflow: hidden;\r\n  flex-grow: 1;\r\n  width: 100%;\r\n}\r\n\r\n.scrollable-container {\r\n  width: 100%; /* Set a fixed or percentage width */\r\n  height: 500px; /* Set a fixed height for scrolling */\r\n  overflow: auto; /* This will allow scrolling */\r\n  border: 1px solid #ccc; /* Optional border */\r\n}\r\n\r\ncanvas {\r\n  width: auto; /* Let the canvas resize */\r\n  height: auto; /* Let the canvas resize */\r\n}\r\n\r\n\r\n/* Flex container that holds the sidebar and main content */\r\n.layout-wrapper {\r\n  display: flex;\r\n  gap: 37px; /* Space between sidebar and content*/\r\n  width: 100%;\r\n  flex-grow: 1;\r\n  padding: 0px 15px 0px 15px;\r\n}\r\n\r\n\r\n\r\n/* Main content styling */\r\n.main-content {\r\n  width: 100%;\r\n  flex-grow: 1;\r\n  padding: 20px;\r\n}\r\n\r\n/* Header with page title and user details */\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 13px 0 36px;\r\n  font-family: Poppins, sans-serif;\r\n}\r\n\r\n.page-title {\r\n  color: var(--Color-Text, #303972);\r\n  font: 700 36px Poppins, sans-serif;\r\n  margin: 0;\r\n}\r\n\r\n.user-profile {\r\n  display: flex;\r\n  gap: 18px;\r\n  align-items: center;\r\n}\r\n\r\n.user-info {\r\n  text-align: center;\r\n}\r\n\r\n/* User text styling for name and role */\r\n.user-name {\r\n  color: var(--Color-Text, #303972);\r\n  font: 600 14px Poppins, sans-serif;\r\n  display: block;\r\n}\r\n\r\n.user-role {\r\n  color: var(--Color-Gray-3, #a098ae);\r\n  font: 400 14px Poppins, sans-serif;\r\n  margin-top: 4px;\r\n  display: block;\r\n}\r\n\r\n/* Avatar styling */\r\n.user-avatar {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 40px;\r\n  background: var(--Color-Gray-2, #c1bbeb);\r\n}\r\n\r\n/* Content section styling */\r\n.content-section {\r\n  background: #fff;\r\n  border-radius: 20px;\r\n  margin-top: 20px;\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.content-box {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative; /* Ensures relative positioning for absolute elements */\r\n}\r\n\r\n\r\n/* Banner styling */\r\n.banner {\r\n  position: relative;\r\n  min-height: 100px;\r\n}\r\n\r\n/* Profile styling */\r\n.profile-content {\r\n  display: flex;\r\n  justify-content: flex-start; /* Align to the left */\r\n  align-items: center; /* Vertically center */\r\n  height: 100%; /* Full available height */\r\n  padding: 20px;\r\n}\r\n\r\n.tiptap {\r\n  width: 100%;\r\n  max-width: 800px; /* Limit the width if necessary */\r\n  margin-top: 20px; /* Space from the top */\r\n  font-weight: normal\r\n}\r\n\r\n.control-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.submit-button {\r\n  display: block;\r\n  width: 140px;\r\n  height: 50px;\r\n  margin: 20px auto;\r\n  background: var(--Color-Purple, #4d44b5);\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 40px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  box-shadow: 0 20px 50px 0 rgba(191, 21, 108, 0.05);\r\n  transition: background 0.3s ease-in-out;\r\n  margin-bottom: 15px; /* Adds space between button and bottom of the box */\r\n  align-self: flex-start; /* Aligns button to the top if inside a flex container */\r\n\r\n}\r\n\r\n.submit-button:hover {\r\n  background: #3b3791;\r\n}\r\n\r\n.delete-button {\r\n  background-color: #4d44b5; /* Same as edit button */\r\n  color: white;\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-left: 10px; /* Same spacing */\r\n  transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\n.delete-button:hover {\r\n  background-color: #3b3791; /* Same hover effect */\r\n}\r\n\r\n.buttons-container {\r\n  display: flex;\r\n  justify-content: flex-end; /* Align buttons to the right */\r\n  gap: 10px; /* Optional: space between buttons */\r\n}\r\n\r\n\r\n.submitted-content-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.submitted-entry {\r\n  background: white;\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);\r\n  font-family: \"Poppins\", sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  justify-content: flex-start; /* Ensure content starts from the left */\r\n\r\n}\r\n\r\n.edit-button {\r\n  background-color: #4d44b5;\r\n  color: white;\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-left: 10px; /* Adds spacing from content */\r\n}\r\n\r\n.edit-button:hover {\r\n  background-color: #3b3791;\r\n}\r\n\r\n.submitted-entry * {\r\n  font-family: inherit; /* Apply font-family to all child elements */\r\n}\r\n\r\n.submitted-entry span {\r\n  font-family: inherit;\r\n}\r\n\r\n/* Preserve rich text styling */\r\n.tiptap-content [style*=\"text-align\"]{\r\n  font-family: \"Poppins\", sans-serif !important;\r\n  font-size: inherit;\r\n  line-height: inherit;\r\n  color: inherit;\r\n\r\n}\r\n\r\n.tiptap-content span {\r\n  all: unset;\r\n}\r\n.tiptap-content p {\r\n  text-align: justify; /* Or set to left, center, or right as needed */\r\n}\r\n\r\n.tiptap-content div {\r\n  font-family: inherit !important;\r\n  text-align: inherit;\r\n\r\n}\r\n\r\n.tiptap-content h1 {\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n}\r\n\r\n.tiptap-content h2 {\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n}\r\n\r\n.tiptap-content strong {\r\n  font-weight: bold;\r\n}\r\n\r\n.tiptap-content em {\r\n  font-style: italic;\r\n}\r\n\r\n.tiptap-content a {\r\n  color: blue;\r\n  text-decoration: underline;\r\n  text-align: inherit;\r\n}\r\n\r\n.tiptap-content p {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n.button-group button {\r\n  padding: 8px 12px;\r\n  background-color: transparent;\r\n  color: black;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  transition: background-color 0.2s ease-in-out;\r\n  font-family: inherit;\r\n}\r\n\r\n.button-group button:hover {\r\n  background-color: transparent;\r\n}\r\n\r\n.dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.dropdown-button {\r\n  padding: 8px 12px;\r\n  background-color: transparent;\r\n  color: black;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  transition: background-color 0.2s ease-in-out;\r\n  font-family: inherit;\r\n}\r\n\r\n.dropdown-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: white;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n  z-index: 1;\r\n  min-width: 150px;\r\n}\r\n\r\n.dropdown-content button {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  text-align: left;\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n}\r\n\r\n.dropdown-content button:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.dropdown:hover .dropdown-content {\r\n  display: block;\r\n}\r\n\r\n.profile-details {\r\nwidth: 100%;\r\ncolor: var(--Color-Text, #303972);\r\nfont-family: Poppins, sans-serif;\r\n}\r\n\r\n.profile-header-section {\r\ndisplay: flex;\r\njustify-content: space-between;\r\nflex-wrap: wrap;\r\ngap: 20px;\r\n}\r\n\r\n/* REMOVE ??? */\r\n.profile-title {\r\nfont: 700 32px Poppins, sans-serif;\r\nmargin: 10;     /*T: 10, O: 0*/\r\npadding-right: 1%; /*T: 1%, O: null*/\r\n}\r\n\r\n/* Styling for about section */\r\n.section-title {\r\nfont: 700 24px Poppins, sans-serif;\r\nmargin: 34px 0 30px;\r\n}\r\n\r\n.section-content {\r\nfont: 400 18px Poppins, sans-serif;\r\ntext-align: justify;\r\nmargin: 0;\r\n}\r\n\r\n/* Media queries for responsive design go here */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}